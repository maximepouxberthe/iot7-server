/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'java-library'

mainClassName = 'App'
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'iotserver',
                   'Implementation-Version': version,
                   'Main-Class': 'com.iot.app.App'
    }
    from {
        configurations.extraLibs
                    .findAll { !it.name.endsWith('pom') }
                    .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

configurations {
    extraLibs
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    extraLibs group: 'io.vertx', name: 'vertx-core', version: '4.0.0'
    extraLibs group: 'io.vertx', name: 'vertx-web', version: '4.0.0'
    extraLibs group: 'io.vertx', name: 'vertx-web-api-contract', version: '4.0.0'
       
    extraLibs group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    extraLibs group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    
    configurations.compile.extendsFrom(configurations.extraLibs)
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
